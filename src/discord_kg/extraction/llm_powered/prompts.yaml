# LLM Prompt Templates for Discord Knowledge Graph Extraction
# These prompts are used to extract structured triples from Discord financial trading conversations

system:
  content: |
    You are an expert at extracting structured knowledge triples from Discord financial trading conversations.

    Your task is to extract triples with confidence scores from messages.

    Rules:
    1. Extract factual relationships only
    2. Use clear, consistent predicates like: asks_about, recommends, alerts, discusses_strategy, reports_return, analyzes, provides_info
    3. Keep objects concise but informative
    4. Subject should be the author username or message_id for Q&A links
    5. Return ONLY a valid JSON array, no other text
    6. Each entry should be: ["subject", "predicate", "object", confidence_score]
    7. Confidence score (0.0-1.0): How certain you are about this relationship
       - 0.9-1.0: Very clear, explicit relationship
       - 0.7-0.9: Clear relationship with good context
       - 0.5-0.7: Reasonable inference from context
       - 0.3-0.5: Weak inference, some ambiguity
       - 0.0-0.3: Very uncertain, speculative

    Example output:
    [
      ["user123", "asks_about", "covered call strategies", 0.95],
      ["expert456", "recommends", "wheel strategy for AAPL", 0.85],
      ["bot", "alerts", "FOMC meeting today", 0.90]
    ]

templates:
  question:
    description: "Extract question triples from Discord messages focusing on what users are asking about"
    instruction: |
      Extract question triples with confidence scores from these Discord messages. Focus on what users are asking about.

      Use predicate "asks_about" and extract the main topic/subject of each question.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "asks_about", "topic", confidence_score]):
    
  strategy:
    description: "Extract strategy discussion triples from trading/financial messages"
    instruction: |
      Extract strategy and recommendation triples with confidence scores from these trading/financial messages.

      Use predicates like:
      - "recommends" for specific strategy recommendations
      - "discusses_strategy" for general strategy talk
      - "mentions_asset" for asset discussions

      Focus on trading strategies, investment approaches, and financial recommendations.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "predicate", "object", confidence_score]):

  analysis:
    description: "Extract analysis triples from financial messages"
    instruction: |
      Extract analysis and opinion triples with confidence scores from these financial messages.

      Use predicates like:
      - "analyzes" for market/asset analysis
      - "provides_analysis" for general analysis
      - "shares_opinion" for opinions and views

      Focus on market analysis, asset outlooks, and financial opinions.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "predicate", "object", confidence_score]):

  answer:
    description: "Extract answer/info triples from answer messages"
    instruction: |
      Extract information-providing triples with confidence scores from these answer messages.

      Use predicates like:
      - "provides_info" for informational content
      - "explains" for explanations
      - "suggests" for suggestions

      Focus on helpful information, explanations, and advice being shared.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "predicate", "object", confidence_score]):

  qa_linking:
    description: "Link questions to their corresponding answers by analyzing content similarity and context"
    instruction: |
      Link questions to their corresponding answers by analyzing content similarity and context.

      Questions:
      {q_text}

      Answers:
      {a_text}

      Create triples linking questions to answers using predicate "answered_by".
      Format: [question_message_id, "answered_by", answer_message_id]

      Only create links for clear question-answer pairs.

      IMPORTANT: Your response must follow this exact structure:

      JSON_START
      [
        [question_id, "answered_by", answer_id, confidence_score],
        [question_id, "answered_by", answer_id, confidence_score]
      ]
      JSON_END

      REASONING:
      Explain your reasoning for each link you created, including why you matched specific questions to answers, any patterns you identified, and how confident you are (0.0-1.0) about each link.

  alert:
    description: "Extract alert triples from warning/notice messages"
    instruction: |
      Extract alert and notification triples with confidence scores from these warning/notice messages.

      Use predicates like:
      - "alerts" for warnings and notices
      - "warns_about" for specific warnings
      - "announces" for announcements

      Focus on important notifications, market alerts, and warnings.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "predicate", "object", confidence_score]):

  performance:
    description: "Extract performance triples from trading results messages"
    instruction: |
      Extract performance and trading result triples with confidence scores from these messages.

      Use predicates like:
      - "reports_return" for specific returns/profits
      - "reports_loss" for losses
      - "shares_performance" for general performance updates

      Focus on trading results, profit/loss reports, and performance metrics.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "predicate", "object", confidence_score]):

  discussion:
    description: "Extract discussion triples from general conversation messages"
    instruction: |
      Extract general discussion triples with confidence scores from these conversation messages.

      Use predicates like:
      - "discusses" for general topics
      - "mentions" for brief mentions
      - "talks_about" for casual discussion

      Focus on general conversation topics and casual discussions.

      Messages:
      {message_text}

      Extract triples with confidence scores as JSON array (format: ["author", "predicate", "object", confidence_score]):

# Configuration settings
config:
  confidence_scores:
    question: 0.85
    strategy: 0.88
    analysis: 0.82
    answer: 0.80
    qa_linking: 0.75
    discussion: 0.60
    alert: 0.85
    performance: 0.90
  
  predicates:
    question: ["asks_about"]
    strategy: ["recommends", "discusses_strategy", "mentions_asset"]
    analysis: ["analyzes", "provides_analysis", "shares_opinion"]
    answer: ["provides_info", "explains", "suggests"]
    qa_linking: ["answered_by"]
    discussion: ["discusses"]
    alert: ["alerts"]
    performance: ["reports_return"]